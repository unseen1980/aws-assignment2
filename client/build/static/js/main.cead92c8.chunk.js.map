{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Header","Layout","Content","Footer","App","useState","name","path","useRef","style","position","zIndex","width","className","theme","mode","defaultSelectedKeys","Item","padding","marginTop","margin","minHeight","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAIQA,EAA4BC,IAA5BD,OAAQE,EAAoBD,IAApBC,QAASC,EAAWF,IAAXE,OAqFVC,MAnFf,WACE,MAAwBC,mBAAS,IAAjC,mBAEA,GAFA,UAEwBA,mBAAS,CAAEC,KAAM,GAAIC,KAAM,MAAnD,mBACA,GADA,UAC+BF,mBAAS,IAAxC,mBAgCA,OAhCA,UACWG,mBA8CT,cAdA,CAcC,IAAD,WACE,eAACR,EAAD,CAAQS,MAAO,CAAEC,SAAU,QAASC,OAAQ,EAAGC,MAAO,QAAtD,UACE,qBAAKC,UAAU,SACf,eAAC,IAAD,CAAMC,MAAM,OAAOC,KAAK,aAAaC,oBAAqB,CAAC,KAA3D,UACE,cAAC,IAAKC,KAAN,mBAAe,KACf,cAAC,IAAKA,KAAN,mBAAe,KACf,cAAC,IAAKA,KAAN,mBAAe,WAGnB,eAACf,EAAD,CACEW,UAAU,cACVJ,MAAO,CAAES,QAAS,SAAUC,UAAW,IAFzC,UAIE,eAAC,IAAD,CAAYV,MAAO,CAAEW,OAAQ,UAA7B,UACE,cAAC,IAAWH,KAAZ,mBACA,cAAC,IAAWA,KAAZ,mBACA,cAAC,IAAWA,KAAZ,qBAEF,qBACEJ,UAAU,yBACVJ,MAAO,CAAES,QAAS,GAAIG,UAAW,KAFnC,wBAOF,cAAClB,EAAD,CAAQM,MAAO,CAAEa,UAAW,UAA5B,wDCtESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cead92c8.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { Layout, Menu, Breadcrumb } from \"antd\";\n\nconst { Header, Content, Footer } = Layout;\n\nfunction App() {\n  const [file, setFile] = useState(\"\"); // storing the uploaded file\n  // storing the recived file from backend\n  const [data, getFile] = useState({ name: \"\", path: \"\" });\n  const [progress, setProgess] = useState(0); // progess bar\n  const el = useRef(); // accesing input element\n\n  const handleChange = (e) => {\n    setProgess(0);\n    const file = e.target.files[0]; // accessing file\n    console.log(file);\n    setFile(file); // storing file\n  };\n\n  const uploadFile = () => {\n    const formData = new FormData();\n    formData.append(\"file\", file); // appending file\n    axios\n      .post(\"http://localhost:3001/upload\", formData, {\n        onUploadProgress: (ProgressEvent) => {\n          let progress =\n            Math.round((ProgressEvent.loaded / ProgressEvent.total) * 100) +\n            \"%\";\n          setProgess(progress);\n        },\n      })\n      .then((res) => {\n        console.log(res);\n        getFile({\n          name: res.data.name,\n          path: \"http://localhost:3001\" + res.data.path,\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    // <div>\n    //   <div className=\"file-upload\">\n    //     <input type=\"file\" ref={el} onChange={handleChange} />\n    //     <div className=\"progessBar\" style={{ width: progress }}>\n    //       {progress}\n    //     </div>\n    //     <button onClick={uploadFile} className=\"upbutton\">\n    //       Upload\n    //     </button>\n    //     <hr />\n    //     {/* displaying received image*/}\n    //     {data.path && <img src={data.path} alt={data.name} />}\n    //   </div>\n    // </div>\n    <Layout>\n      <Header style={{ position: \"fixed\", zIndex: 1, width: \"100%\" }}>\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[\"2\"]}>\n          <Menu.Item key=\"1\">nav 1</Menu.Item>\n          <Menu.Item key=\"2\">nav 2</Menu.Item>\n          <Menu.Item key=\"3\">nav 3</Menu.Item>\n        </Menu>\n      </Header>\n      <Content\n        className=\"site-layout\"\n        style={{ padding: \"0 50px\", marginTop: 64 }}\n      >\n        <Breadcrumb style={{ margin: \"16px 0\" }}>\n          <Breadcrumb.Item>Home</Breadcrumb.Item>\n          <Breadcrumb.Item>List</Breadcrumb.Item>\n          <Breadcrumb.Item>App</Breadcrumb.Item>\n        </Breadcrumb>\n        <div\n          className=\"site-layout-background\"\n          style={{ padding: 24, minHeight: 380 }}\n        >\n          Content\n        </div>\n      </Content>\n      <Footer style={{ textAlign: \"center\" }}>\n        Ant Design Â©2018 Created by Ant UED\n      </Footer>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}