{"version":3,"sources":["App.js","reportWebVitals.js","Gallery.js","index.js"],"names":["Layout","Header","Content","Footer","App","useState","file","setFile","name","path","data","getFile","progress","setProgess","el","useRef","orientation","className","style","textAlign","type","id","ref","onChange","e","target","files","console","log","width","onClick","formData","FormData","append","axios","post","onUploadProgress","ProgressEvent","Math","round","loaded","total","then","res","document","getElementById","value","catch","err","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Meta","Card","Gallery","React","setFiles","useEffect","fetch","json","padding","gutter","length","map","span","hoverable","cover","alt","src","title","normal","ReactDOM","render","StrictMode","position","zIndex","color","theme","mode","defaultSelectedKeys","Item","to","marginTop","margin","minHeight","element"],"mappings":"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","file":"static/js/main.810760c1.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { Layout, Divider } from \"antd\";\n\nconst { Header, Content, Footer } = Layout;\n\nfunction App() {\n  const [file, setFile] = useState(\"\"); // storing the uploaded file\n  // storing the recived file from backend\n  const [data, getFile] = useState({ name: \"\", path: \"\" });\n  const [progress, setProgess] = useState(0); // progess bar\n  const el = useRef(); // accesing input element\n\n  const handleChange = (e) => {\n    setProgess(0);\n    const file = e.target.files[0]; // accessing file\n    console.log(file);\n    setFile(file); // storing file\n  };\n\n  const uploadFile = () => {\n    const formData = new FormData();\n    formData.append(\"file\", file); // appending file\n    axios\n      .post(\"http://localhost:3001/upload\", formData, {\n        onUploadProgress: (ProgressEvent) => {\n          let progress =\n            Math.round((ProgressEvent.loaded / ProgressEvent.total) * 100) +\n            \"%\";\n          setProgess(progress);\n        },\n      })\n      .then((res) => {\n        console.log(res);\n        getFile({\n          name: res.data.name,\n          path: res.data.path,\n        });\n        document.getElementById(\"fileInput\").value = \"\";\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <div>\n      <Divider orientation=\"left\">Upload your PNG's</Divider>\n      <div className=\"file-upload\" style={{ textAlign: \"center\" }}>\n        <input type=\"file\" id=\"fileInput\" ref={el} onChange={handleChange} />\n        {progress > 0 && (\n          <div className=\"progessBar\" style={{ width: progress }}>\n            {progress}\n          </div>\n        )}\n        <button onClick={uploadFile} className=\"upbutton\">\n          Upload\n        </button>\n        {data.path && (\n          <>\n            <br />\n            <span>\n              File uploaded at:{\" \"}\n              <a href={data.path} target=\"_blank\">\n                {data.path}\n              </a>{\" \"}\n            </span>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Row, Col, Divider, Card } from \"antd\";\nimport React from \"react\";\nconst { Meta } = Card;\n\nexport default function Gallery() {\n  const [files, setFiles] = React.useState(null);\n  React.useEffect(() => {\n    fetch(\"/files\")\n      .then((res) => res.json())\n      .then((data) => {\n        setFiles(data);\n        console.log(\"--->\", data);\n      });\n  }, []);\n  return (\n    <main style={{ padding: \"1rem 0\" }}>\n      <Divider orientation=\"left\">Gallery</Divider>\n      <Row gutter={[16, 16]}>\n        {files &&\n          files.length > 0 &&\n          files.map((file) => {\n            return (\n              <Col className=\"gutter-row\" span={6}>\n                <div>\n                  {\" \"}\n                  <Card\n                    hoverable\n                    style={{ width: \"100%\" }}\n                    cover={<img alt=\"example\" src={file.name} />}\n                  >\n                    <Meta title=\"Links\" />\n                    <a href={file.normal} target=\"_blank\">\n                      Normal image\n                    </a>\n                    <br />\n                    <a href={file.name} target=\"_blank\">\n                      Resized image\n                    </a>\n                  </Card>\n                </div>\n              </Col>\n            );\n          })}\n      </Row>\n    </main>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Gallery from \"./Gallery\";\nimport React from \"react\";\nimport { Layout, Menu, Breadcrumb } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nconst { Header, Content, Footer } = Layout;\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Layout>\n        <Header style={{ position: \"fixed\", zIndex: 1, width: \"100%\" }}>\n          <div className=\"logo\">\n            <span style={{ color: \"#fff\" }}>AWS Assignment 2</span>\n          </div>\n          <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[\"1\"]}>\n            <Menu.Item key=\"1\">\n              <Link to=\"/\">Home</Link>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <Link to=\"/gallery\">Gallery</Link>\n            </Menu.Item>\n          </Menu>\n        </Header>\n        <Content\n          className=\"site-layout\"\n          style={{ padding: \"0 50px\", marginTop: 64 }}\n        >\n          <Breadcrumb style={{ margin: \"60px 0\" }}></Breadcrumb>\n          <div\n            className=\"site-layout-background\"\n            style={{ padding: 24, minHeight: 380 }}\n          >\n            <Routes>\n              <Route path=\"/\" element={<App />} />\n              <Route path=\"gallery\" element={<Gallery />} />\n            </Routes>\n          </div>\n        </Content>\n        <Footer style={{ textAlign: \"center\" }}>\n          AWS Assignment 2 C.Koutsiaris\n        </Footer>\n      </Layout>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}